// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'dart:async';
import 'dart:convert';

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';
import 'package:kitshell/src/rust/api/appmenu/appmenu_items.dart';
import 'package:kitshell/src/rust/api/display_info.dart';
import 'package:kitshell/src/rust/api/notifications.dart';
import 'package:kitshell/src/rust/api/quick_settings/battery.dart';
import 'package:kitshell/src/rust/api/quick_settings/display_brightness.dart';
import 'package:kitshell/src/rust/api/quick_settings/whoami.dart';
import 'package:kitshell/src/rust/frb_generated.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_NotificationDbusPtr => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  NotificationDbus
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    dynamic raw,
  );

  @protected
  NotificationDbus
  dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    dynamic raw,
  );

  @protected
  NotificationDbus
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    dynamic raw,
  );

  @protected
  DateTime dco_decode_Chrono_Local(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String_None(dynamic raw);

  @protected
  NotificationDbus
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    dynamic raw,
  );

  @protected
  RustStreamSink<List<BacklightInfo>>
  dco_decode_StreamSink_list_backlight_info_Sse(dynamic raw);

  @protected
  RustStreamSink<List<BatteryInfo>> dco_decode_StreamSink_list_battery_info_Sse(
    dynamic raw,
  );

  @protected
  RustStreamSink<NotificationData> dco_decode_StreamSink_notification_data_Sse(
    dynamic raw,
  );

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AppEntry dco_decode_app_entry(dynamic raw);

  @protected
  BacklightInfo dco_decode_backlight_info(dynamic raw);

  @protected
  BatteryInfo dco_decode_battery_info(dynamic raw);

  @protected
  BatteryState dco_decode_battery_state(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  DispInfo dco_decode_disp_info(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<AppEntry> dco_decode_list_app_entry(dynamic raw);

  @protected
  List<BacklightInfo> dco_decode_list_backlight_info(dynamic raw);

  @protected
  List<BatteryInfo> dco_decode_list_battery_info(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  NotificationData dco_decode_notification_data(dynamic raw);

  @protected
  NotificationService dco_decode_notification_service(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserInfo dco_decode_user_info(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  NotificationDbus
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    SseDeserializer deserializer,
  );

  @protected
  NotificationDbus
  sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    SseDeserializer deserializer,
  );

  @protected
  NotificationDbus
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    SseDeserializer deserializer,
  );

  @protected
  DateTime sse_decode_Chrono_Local(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String_None(
    SseDeserializer deserializer,
  );

  @protected
  NotificationDbus
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    SseDeserializer deserializer,
  );

  @protected
  RustStreamSink<List<BacklightInfo>>
  sse_decode_StreamSink_list_backlight_info_Sse(SseDeserializer deserializer);

  @protected
  RustStreamSink<List<BatteryInfo>> sse_decode_StreamSink_list_battery_info_Sse(
    SseDeserializer deserializer,
  );

  @protected
  RustStreamSink<NotificationData> sse_decode_StreamSink_notification_data_Sse(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AppEntry sse_decode_app_entry(SseDeserializer deserializer);

  @protected
  BacklightInfo sse_decode_backlight_info(SseDeserializer deserializer);

  @protected
  BatteryInfo sse_decode_battery_info(SseDeserializer deserializer);

  @protected
  BatteryState sse_decode_battery_state(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  DispInfo sse_decode_disp_info(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<AppEntry> sse_decode_list_app_entry(SseDeserializer deserializer);

  @protected
  List<BacklightInfo> sse_decode_list_backlight_info(
    SseDeserializer deserializer,
  );

  @protected
  List<BatteryInfo> sse_decode_list_battery_info(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  NotificationData sse_decode_notification_data(SseDeserializer deserializer);

  @protected
  NotificationService sse_decode_notification_service(
    SseDeserializer deserializer,
  );

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserInfo sse_decode_user_info(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
    AnyhowException self,
    SseSerializer serializer,
  );

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    NotificationDbus self,
    SseSerializer serializer,
  );

  @protected
  void
  sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    NotificationDbus self,
    SseSerializer serializer,
  );

  @protected
  void
  sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    NotificationDbus self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_Chrono_Local(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String_None(
    Map<String, String> self,
    SseSerializer serializer,
  );

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    NotificationDbus self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_list_backlight_info_Sse(
    RustStreamSink<List<BacklightInfo>> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_list_battery_info_Sse(
    RustStreamSink<List<BatteryInfo>> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_notification_data_Sse(
    RustStreamSink<NotificationData> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_app_entry(AppEntry self, SseSerializer serializer);

  @protected
  void sse_encode_backlight_info(BacklightInfo self, SseSerializer serializer);

  @protected
  void sse_encode_battery_info(BatteryInfo self, SseSerializer serializer);

  @protected
  void sse_encode_battery_state(BatteryState self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_disp_info(DispInfo self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_app_entry(List<AppEntry> self, SseSerializer serializer);

  @protected
  void sse_encode_list_backlight_info(
    List<BacklightInfo> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_battery_info(
    List<BatteryInfo> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_string(
    List<(String, String)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_notification_data(
    NotificationData self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_notification_service(
    NotificationService self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
    (String, String) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_info(UserInfo self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary();

  void
  rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    int ptr,
  ) => wasmModule
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
        ptr,
      );

  void
  rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    int ptr,
  ) => wasmModule
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
        ptr,
      );
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {
  external void
  rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    int ptr,
  );

  external void
  rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerNotificationDbus(
    int ptr,
  );
}
