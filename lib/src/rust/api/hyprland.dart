// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.3.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<HyprlandData> getHyprlandData() =>
    RustLib.instance.api.crateApiHyprlandGetHyprlandData();

Future<void> dispatchSwitchWorkspaceNext() =>
    RustLib.instance.api.crateApiHyprlandDispatchSwitchWorkspaceNext();

Future<void> dispatchSwitchWorkspacePrevious() =>
    RustLib.instance.api.crateApiHyprlandDispatchSwitchWorkspacePrevious();

Future<void> dispatchKillActive() =>
    RustLib.instance.api.crateApiHyprlandDispatchKillActive();

Future<String> getActiveWindowTitle() =>
    RustLib.instance.api.crateApiHyprlandGetActiveWindowTitle();

Future<WorkspaceData> getActiveWorkspaceNumber() =>
    RustLib.instance.api.crateApiHyprlandGetActiveWorkspaceNumber();

Future<Workspaces> getWorkspaces() =>
    RustLib.instance.api.crateApiHyprlandGetWorkspaces();

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Workspaces>>
abstract class Workspaces implements RustOpaqueInterface {}

class HyprlandData {
  final String activeWindowTitle;
  final WorkspaceData activeWorkspace;

  const HyprlandData({
    required this.activeWindowTitle,
    required this.activeWorkspace,
  });

  @override
  int get hashCode => activeWindowTitle.hashCode ^ activeWorkspace.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is HyprlandData &&
          runtimeType == other.runtimeType &&
          activeWindowTitle == other.activeWindowTitle &&
          activeWorkspace == other.activeWorkspace;
}

class WorkspaceData {
  final int id;
  final String name;

  const WorkspaceData({
    required this.id,
    required this.name,
  });

  @override
  int get hashCode => id.hashCode ^ name.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WorkspaceData &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name;
}
